def find_min_max(arr):
    """
    –ó–Ω–∞—Ö–æ–¥–∏—Ç—å –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤—É
    –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∞–ª–≥–æ—Ä–∏—Ç–º—É '—Ä–æ–∑–¥—ñ–ª—è–π —ñ –≤–æ–ª–æ–¥–∞—Ä—é–π'.

    Args:
        arr (list): —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª

    Returns:
        tuple: (–º—ñ–Ω—ñ–º—É–º, –º–∞–∫—Å–∏–º—É–º)
    """
    # –ë–∞–∑–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫: –æ–¥–∏–Ω –µ–ª–µ–º–µ–Ω—Ç
    if len(arr) == 1:
        return arr[0], arr[0]

    # –ë–∞–∑–æ–≤–∏–π –≤–∏–ø–∞–¥–æ–∫: –¥–≤–∞ –µ–ª–µ–º–µ–Ω—Ç–∏
    if len(arr) == 2:
        return (arr[0], arr[1]) if arr[0] < arr[1] else (arr[1], arr[0])

    # –†–µ–∫—É—Ä—Å–∏–≤–Ω–µ —Ä–æ–∑–±–∏—Ç—Ç—è
    mid = len(arr) // 2
    left_min, left_max = find_min_max(arr[:mid])
    right_min, right_max = find_min_max(arr[mid:])

    # –û–±‚Äô—î–¥–Ω–∞–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    overall_min = min(left_min, right_min)
    overall_max = max(left_max, right_max)

    return overall_min, overall_max


# üîπ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è
if __name__ == "__main__":
    data = [3, 5, 1, 8, 2, 10, 6]
    mn, mx = find_min_max(data)
    print(f"–ú—ñ–Ω—ñ–º—É–º: {mn}, –ú–∞–∫—Å–∏–º—É–º: {mx}")
